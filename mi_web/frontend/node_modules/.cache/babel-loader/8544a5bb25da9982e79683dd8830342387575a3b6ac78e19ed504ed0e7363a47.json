{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Desktop\\\\Nueva carpeta (2)\\\\prueba\\\\mi_web\\\\frontend\\\\src\\\\components\\\\BuscarPaciente.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../BuscarPaciente.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BuscarPaciente() {\n  _s();\n  const [rut, setRut] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/api/buscar-residente', {\n        rut\n      });\n      if (response.data.existe) {\n        // Si encontramos al paciente, navegamos a su historial\n        navigate(`/historial-clinico/${rut}`);\n      } else {\n        setError('No se encontró ningún paciente con ese RUT');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        setError(err.response.data.error);\n      } else {\n        setError('Error al buscar el paciente. Por favor intente nuevamente.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buscar-paciente-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buscar Paciente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"RUT del Paciente:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: rut,\n          onChange: e => setRut(e.target.value),\n          placeholder: \"Ingrese RUT (ej: 12345678-9)\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn-buscar\",\n          disabled: loading,\n          children: loading ? 'Buscando...' : 'Buscar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-volver\",\n          onClick: () => navigate(-1),\n          children: \"Volver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(BuscarPaciente, \"Om1OCUlZcB5gjzIQL65AFT/SGEI=\", false, function () {\n  return [useNavigate];\n});\n_c = BuscarPaciente;\nexport default BuscarPaciente;\nvar _c;\n$RefreshReg$(_c, \"BuscarPaciente\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","BuscarPaciente","_s","rut","setRut","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","response","post","data","existe","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rodri/Desktop/Nueva carpeta (2)/prueba/mi_web/frontend/src/components/BuscarPaciente.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../BuscarPaciente.css';\n\nfunction BuscarPaciente() {\n    const [rut, setRut] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        setLoading(true);\n\n        try {\n            const response = await axios.post('http://localhost:5000/api/buscar-residente', { rut });\n            \n            if (response.data.existe) {\n                // Si encontramos al paciente, navegamos a su historial\n                navigate(`/historial-clinico/${rut}`);\n            } else {\n                setError('No se encontró ningún paciente con ese RUT');\n            }\n        } catch (err) {\n            if (err.response?.data?.error) {\n                setError(err.response.data.error);\n            } else {\n                setError('Error al buscar el paciente. Por favor intente nuevamente.');\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"buscar-paciente-container\">\n            <h2>Buscar Paciente</h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>RUT del Paciente:</label>\n                    <input\n                        type=\"text\"\n                        value={rut}\n                        onChange={(e) => setRut(e.target.value)}\n                        placeholder=\"Ingrese RUT (ej: 12345678-9)\"\n                        required\n                    />\n                </div>\n                \n                {error && (\n                    <div className=\"error-message\">\n                        {error}\n                    </div>\n                )}\n                \n                <div className=\"buttons-container\">\n                    <button\n                        type=\"submit\"\n                        className=\"btn-buscar\"\n                        disabled={loading}\n                    >\n                        {loading ? 'Buscando...' : 'Buscar'}\n                    </button>\n                    <button\n                        type=\"button\"\n                        className=\"btn-volver\"\n                        onClick={() => navigate(-1)}\n                    >\n                        Volver\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default BuscarPaciente;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}